import 'package:poker_simulations/poker_simulations.dart';

final beats = (Hand a, Hand b) => a.beats(b),
    ties = (Hand a, Hand b) => a.strength == b.strength;
void main() {
  for (final (message, handA, handB, f) in [
    (
      'Royal flush beats straight Flush...',
      Hand([
        Card(Face.ten, Suit.spades),
        Card(Face.jack, Suit.spades),
        Card(Face.queen, Suit.spades),
        Card(Face.king, Suit.spades),
        Card(Face.ace, Suit.spades),
      ]),
      Hand([
        Card(Face.nine, Suit.spades),
        Card(Face.ten, Suit.spades),
        Card(Face.jack, Suit.spades),
        Card(Face.queen, Suit.spades),
        Card(Face.king, Suit.spades),
      ]),
      beats,
    ),
    (
      'Four of a kind beats full House...',
      Hand([
        Card(Face.nine, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.nine, Suit.clubs),
        Card(Face.nine, Suit.diamonds),
        Card(Face.king, Suit.spades),
        Card(Face.king, Suit.hearts),
        Card(Face.five, Suit.clubs),
      ]),
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.king, Suit.hearts),
        Card(Face.king, Suit.clubs),
        Card(Face.nine, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.five, Suit.clubs),
        Card(Face.four, Suit.diamonds),
      ]),
      beats,
    ),
    (
      'Flush beats straight...',
      Hand([
        Card(Face.ace, Suit.hearts),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.hearts),
        Card(Face.five, Suit.hearts),
        Card(Face.six, Suit.hearts),
        Card(Face.seven, Suit.clubs),
        Card(Face.eight, Suit.spades),
      ]),
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.four, Suit.diamonds),
        Card(Face.five, Suit.spades),
        Card(Face.ace, Suit.hearts),
        Card(Face.king, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Pair beats high card',
      Hand([
        Card(Face.two, Suit.spades),
        Card(Face.ace, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.five, Suit.diamonds),
        Card(Face.seven, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.two, Suit.clubs),
      ]),
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.queen, Suit.hearts),
        Card(Face.jack, Suit.clubs),
        Card(Face.two, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.eight, Suit.hearts),
        Card(Face.seven, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Three of a kind beats two pairs...',
      Hand([
        Card(Face.five, Suit.spades),
        Card(Face.five, Suit.hearts),
        Card(Face.five, Suit.clubs),
        Card(Face.king, Suit.diamonds),
        Card(Face.queen, Suit.spades),
        Card(Face.jack, Suit.hearts),
        Card(Face.ten, Suit.clubs),
      ]),
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.king, Suit.hearts),
        Card(Face.queen, Suit.clubs),
        Card(Face.queen, Suit.diamonds),
        Card(Face.jack, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.eight, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Two low pairs beats high pair...',
      Hand([
        Card(Face.ten, Suit.spades),
        Card(Face.ten, Suit.hearts),
        Card(Face.four, Suit.clubs),
        Card(Face.four, Suit.diamonds),
        Card(Face.king, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.eight, Suit.clubs),
      ]),
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.king, Suit.hearts),
        Card(Face.queen, Suit.clubs),
        Card(Face.jack, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.eight, Suit.hearts),
        Card(Face.ace, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Low pair beats high card...',
      Hand([
        Card(Face.two, Suit.spades),
        Card(Face.ace, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.two, Suit.diamonds),
        Card(Face.seven, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.jack, Suit.clubs),
      ]),
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.queen, Suit.hearts),
        Card(Face.jack, Suit.clubs),
        Card(Face.two, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.eight, Suit.hearts),
        Card(Face.seven, Suit.clubs),
      ]),
      beats,
    ),
    (
      'High card ace beats high card king...',
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.five, Suit.diamonds),
        Card(Face.seven, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.jack, Suit.clubs),
      ]),
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.five, Suit.diamonds),
        Card(Face.seven, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.jack, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Same hand type and score ties...',
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.ace, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.five, Suit.diamonds),
        Card(Face.seven, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.jack, Suit.clubs),
      ]),
      Hand([
        Card(Face.ace, Suit.clubs),
        Card(Face.ace, Suit.diamonds),
        Card(Face.three, Suit.spades),
        Card(Face.five, Suit.hearts),
        Card(Face.seven, Suit.clubs),
        Card(Face.nine, Suit.diamonds),
        Card(Face.jack, Suit.spades),
      ]),
      ties,
    ),
    (
      'Straight with king high beats straight with ace low...',
      Hand([
        Card(Face.ten, Suit.spades),
        Card(Face.jack, Suit.hearts),
        Card(Face.queen, Suit.clubs),
        Card(Face.king, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.eight, Suit.hearts),
        Card(Face.seven, Suit.clubs),
      ]),
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.clubs),
        Card(Face.four, Suit.diamonds),
        Card(Face.five, Suit.spades),
        Card(Face.nine, Suit.hearts),
        Card(Face.jack, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Full house with high triple beats full house with low triple...',
      Hand([
        Card(Face.king, Suit.spades),
        Card(Face.king, Suit.hearts),
        Card(Face.king, Suit.clubs),
        Card(Face.nine, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.five, Suit.hearts),
        Card(Face.four, Suit.clubs),
      ]),
      Hand([
        Card(Face.queen, Suit.spades),
        Card(Face.queen, Suit.hearts),
        Card(Face.queen, Suit.clubs),
        Card(Face.ace, Suit.diamonds),
        Card(Face.ace, Suit.spades),
        Card(Face.five, Suit.hearts),
        Card(Face.four, Suit.clubs),
      ]),
      beats,
    ),
    (
      'Flush with higher card beats flush with lower card',
      Hand([
        Card(Face.ace, Suit.hearts),
        Card(Face.king, Suit.hearts),
        Card(Face.queen, Suit.hearts),
        Card(Face.jack, Suit.hearts),
        Card(Face.nine, Suit.hearts),
        Card(Face.five, Suit.hearts),
        Card(Face.four, Suit.hearts),
      ]),
      Hand([
        Card(Face.king, Suit.hearts),
        Card(Face.queen, Suit.hearts),
        Card(Face.jack, Suit.hearts),
        Card(Face.ten, Suit.hearts),
        Card(Face.eight, Suit.hearts),
        Card(Face.five, Suit.hearts),
        Card(Face.four, Suit.hearts),
      ]),
      beats,
    ),
    (
      'Straight flush beats four of a kind...',
      Hand([
        Card(Face.ace, Suit.hearts),
        Card(Face.two, Suit.hearts),
        Card(Face.three, Suit.hearts),
        Card(Face.four, Suit.hearts),
        Card(Face.five, Suit.hearts),
        Card(Face.seven, Suit.hearts),
        Card(Face.eight, Suit.hearts),
      ]),
      Hand([
        Card(Face.ace, Suit.spades),
        Card(Face.ace, Suit.hearts),
        Card(Face.ace, Suit.clubs),
        Card(Face.ace, Suit.diamonds),
        Card(Face.nine, Suit.spades),
        Card(Face.five, Suit.hearts),
        Card(Face.four, Suit.clubs),
      ]),
      beats,
    ),
  ]) {
    print('\n$message');
    print('\nHand A:');
    print(handA);
    print('\nHand B:');
    print(handB);
    print(f(handA, handB) ? 'Success!' : 'Failure!');
    print('-' * 60);
  }
}
